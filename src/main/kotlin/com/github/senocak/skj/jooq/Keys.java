/*
 * This file is generated by jOOQ.
 */
package com.github.senocak.skj.jooq;


import com.github.senocak.skj.jooq.tables.AuditRevisionEntity;
import com.github.senocak.skj.jooq.tables.EmailActivationTokens;
import com.github.senocak.skj.jooq.tables.EmailActivationTokensAud;
import com.github.senocak.skj.jooq.tables.FlywaySchemaHistory;
import com.github.senocak.skj.jooq.tables.Roles;
import com.github.senocak.skj.jooq.tables.UserAudit;
import com.github.senocak.skj.jooq.tables.UserRoles;
import com.github.senocak.skj.jooq.tables.UserRolesAud;
import com.github.senocak.skj.jooq.tables.Users;
import com.github.senocak.skj.jooq.tables.records.AuditRevisionEntityRecord;
import com.github.senocak.skj.jooq.tables.records.EmailActivationTokensAudRecord;
import com.github.senocak.skj.jooq.tables.records.EmailActivationTokensRecord;
import com.github.senocak.skj.jooq.tables.records.FlywaySchemaHistoryRecord;
import com.github.senocak.skj.jooq.tables.records.RolesRecord;
import com.github.senocak.skj.jooq.tables.records.UserAuditRecord;
import com.github.senocak.skj.jooq.tables.records.UserRolesAudRecord;
import com.github.senocak.skj.jooq.tables.records.UserRolesRecord;
import com.github.senocak.skj.jooq.tables.records.UsersRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AuditRevisionEntityRecord> AUDIT_REVISION_ENTITY_PKEY = Internal.createUniqueKey(AuditRevisionEntity.AUDIT_REVISION_ENTITY, DSL.name("audit_revision_entity_pkey"), new TableField[] { AuditRevisionEntity.AUDIT_REVISION_ENTITY.ID }, true);
    public static final UniqueKey<EmailActivationTokensRecord> EMAIL_ACTIVATION_TOKENS_PKEY = Internal.createUniqueKey(EmailActivationTokens.EMAIL_ACTIVATION_TOKENS, DSL.name("email_activation_tokens_pkey"), new TableField[] { EmailActivationTokens.EMAIL_ACTIVATION_TOKENS.ID }, true);
    public static final UniqueKey<EmailActivationTokensRecord> UK_EMAIL_ACTIVATION_TOKENS_TOKEN = Internal.createUniqueKey(EmailActivationTokens.EMAIL_ACTIVATION_TOKENS, DSL.name("uk_email_activation_tokens_token"), new TableField[] { EmailActivationTokens.EMAIL_ACTIVATION_TOKENS.TOKEN }, true);
    public static final UniqueKey<EmailActivationTokensAudRecord> EMAIL_ACTIVATION_TOKENS_AUD_PKEY = Internal.createUniqueKey(EmailActivationTokensAud.EMAIL_ACTIVATION_TOKENS_AUD, DSL.name("email_activation_tokens_aud_pkey"), new TableField[] { EmailActivationTokensAud.EMAIL_ACTIVATION_TOKENS_AUD.REV, EmailActivationTokensAud.EMAIL_ACTIVATION_TOKENS_AUD.ID }, true);
    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, DSL.name("flyway_schema_history_pk"), new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
    public static final UniqueKey<RolesRecord> ROLES_PKEY = Internal.createUniqueKey(Roles.ROLES, DSL.name("roles_pkey"), new TableField[] { Roles.ROLES.ID }, true);
    public static final UniqueKey<UserAuditRecord> USER_AUDIT_PKEY = Internal.createUniqueKey(UserAudit.USER_AUDIT, DSL.name("user_audit_pkey"), new TableField[] { UserAudit.USER_AUDIT.REV, UserAudit.USER_AUDIT.ID }, true);
    public static final UniqueKey<UserRolesRecord> USER_ROLES_PKEY = Internal.createUniqueKey(UserRoles.USER_ROLES, DSL.name("user_roles_pkey"), new TableField[] { UserRoles.USER_ROLES.USER_ID, UserRoles.USER_ROLES.ROLE_ID }, true);
    public static final UniqueKey<UserRolesAudRecord> USER_ROLES_AUD_PKEY = Internal.createUniqueKey(UserRolesAud.USER_ROLES_AUD, DSL.name("user_roles_aud_pkey"), new TableField[] { UserRolesAud.USER_ROLES_AUD.REV, UserRolesAud.USER_ROLES_AUD.ROLE_ID, UserRolesAud.USER_ROLES_AUD.USER_ID }, true);
    public static final UniqueKey<UsersRecord> UK_EMAIL_USER = Internal.createUniqueKey(Users.USERS, DSL.name("uk_email_user"), new TableField[] { Users.USERS.EMAIL }, true);
    public static final UniqueKey<UsersRecord> USERS_PKEY = Internal.createUniqueKey(Users.USERS, DSL.name("users_pkey"), new TableField[] { Users.USERS.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<EmailActivationTokensRecord, UsersRecord> EMAIL_ACTIVATION_TOKENS__FK_EMAIL_ACTIVATION_TOKENS_USER_USER_ID = Internal.createForeignKey(EmailActivationTokens.EMAIL_ACTIVATION_TOKENS, DSL.name("fk_email_activation_tokens_user_user_id"), new TableField[] { EmailActivationTokens.EMAIL_ACTIVATION_TOKENS.USER_ID }, Keys.USERS_PKEY, new TableField[] { Users.USERS.ID }, true);
    public static final ForeignKey<EmailActivationTokensAudRecord, AuditRevisionEntityRecord> EMAIL_ACTIVATION_TOKENS_AUD__FK_EMAIL_ACTIVATION_TOKENS_AUDIT_REV = Internal.createForeignKey(EmailActivationTokensAud.EMAIL_ACTIVATION_TOKENS_AUD, DSL.name("fk_email_activation_tokens_audit_rev"), new TableField[] { EmailActivationTokensAud.EMAIL_ACTIVATION_TOKENS_AUD.REV }, Keys.AUDIT_REVISION_ENTITY_PKEY, new TableField[] { AuditRevisionEntity.AUDIT_REVISION_ENTITY.ID }, true);
    public static final ForeignKey<UserAuditRecord, AuditRevisionEntityRecord> USER_AUDIT__FK_USER_AUDIT_REV = Internal.createForeignKey(UserAudit.USER_AUDIT, DSL.name("fk_user_audit_rev"), new TableField[] { UserAudit.USER_AUDIT.REV }, Keys.AUDIT_REVISION_ENTITY_PKEY, new TableField[] { AuditRevisionEntity.AUDIT_REVISION_ENTITY.ID }, true);
    public static final ForeignKey<UserRolesRecord, RolesRecord> USER_ROLES__FK_USER_ROLES_USER_ROLE_ID = Internal.createForeignKey(UserRoles.USER_ROLES, DSL.name("fk_user_roles_user_role_id"), new TableField[] { UserRoles.USER_ROLES.ROLE_ID }, Keys.ROLES_PKEY, new TableField[] { Roles.ROLES.ID }, true);
    public static final ForeignKey<UserRolesRecord, UsersRecord> USER_ROLES__FK_USER_ROLES_USER_USER_ID = Internal.createForeignKey(UserRoles.USER_ROLES, DSL.name("fk_user_roles_user_user_id"), new TableField[] { UserRoles.USER_ROLES.USER_ID }, Keys.USERS_PKEY, new TableField[] { Users.USERS.ID }, true);
    public static final ForeignKey<UserRolesAudRecord, AuditRevisionEntityRecord> USER_ROLES_AUD__FK_USER_ROLES_AUDIT_REV = Internal.createForeignKey(UserRolesAud.USER_ROLES_AUD, DSL.name("fk_user_roles_audit_rev"), new TableField[] { UserRolesAud.USER_ROLES_AUD.REV }, Keys.AUDIT_REVISION_ENTITY_PKEY, new TableField[] { AuditRevisionEntity.AUDIT_REVISION_ENTITY.ID }, true);
}
