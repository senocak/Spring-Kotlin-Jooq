/*
 * This file is generated by jOOQ.
 */
package com.github.senocak.skj.jooq.tables.records;


import com.github.senocak.skj.jooq.tables.AuditRevisionEntity;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuditRevisionEntityRecord extends UpdatableRecordImpl<AuditRevisionEntityRecord> implements Record3<Integer, Long, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.audit_revision_entity.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.audit_revision_entity.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.audit_revision_entity.timestamp</code>.
     */
    public void setTimestamp(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.audit_revision_entity.timestamp</code>.
     */
    public Long getTimestamp() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.audit_revision_entity.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.audit_revision_entity.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Long, LocalDateTime> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, Long, LocalDateTime> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return AuditRevisionEntity.AUDIT_REVISION_ENTITY.ID;
    }

    @Override
    public Field<Long> field2() {
        return AuditRevisionEntity.AUDIT_REVISION_ENTITY.TIMESTAMP;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return AuditRevisionEntity.AUDIT_REVISION_ENTITY.UPDATED_AT;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getTimestamp();
    }

    @Override
    public LocalDateTime component3() {
        return getUpdatedAt();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getTimestamp();
    }

    @Override
    public LocalDateTime value3() {
        return getUpdatedAt();
    }

    @Override
    public AuditRevisionEntityRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public AuditRevisionEntityRecord value2(Long value) {
        setTimestamp(value);
        return this;
    }

    @Override
    public AuditRevisionEntityRecord value3(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public AuditRevisionEntityRecord values(Integer value1, Long value2, LocalDateTime value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AuditRevisionEntityRecord
     */
    public AuditRevisionEntityRecord() {
        super(AuditRevisionEntity.AUDIT_REVISION_ENTITY);
    }

    /**
     * Create a detached, initialised AuditRevisionEntityRecord
     */
    public AuditRevisionEntityRecord(Integer id, Long timestamp, LocalDateTime updatedAt) {
        super(AuditRevisionEntity.AUDIT_REVISION_ENTITY);

        setId(id);
        setTimestamp(timestamp);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }
}
